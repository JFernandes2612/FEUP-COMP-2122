import ioPlus;
ComplexArrayAccess {

    .construct ComplexArrayAccess().V {
        invokespecial(this, "<init>").V;
    }

    .method public func(a.i32).i32 {
ret.i32 a.i32;
    }
    .method public static main(args.array.String).V {
d.ComplexArrayAccess :=.ComplexArrayAccess new(ComplexArrayAccess).ComplexArrayAccess;
invokespecial(d.ComplexArrayAccess,"<init>").V;
temp0.i32 :=.i32 5.i32;
a.array.i32 :=.array.i32 new(array, temp0.i32).array.i32;
temp1.i32 :=.i32 0.i32;
a[temp1.i32].i32 :=.i32 1.i32;
temp2.i32 :=.i32 1.i32;
a[temp2.i32].i32 :=.i32 2.i32;
temp3.i32 :=.i32 2.i32;
a[temp3.i32].i32 :=.i32 3.i32;
temp4.i32 :=.i32 3.i32;
a[temp4.i32].i32 :=.i32 4.i32;
temp5.i32 :=.i32 4.i32;
a[temp5.i32].i32 :=.i32 5.i32;
i.i32 :=.i32 1.i32;
temp8.i32 :=.i32 invokevirtual(d.ComplexArrayAccess, "func", 0.i32).i32.i32;
temp7.i32 :=.i32 a[temp8.i32].i32;
invokestatic(ioPlus, "printResult", temp7.i32).V;
temp11.i32 :=.i32 i.i32;
temp10.i32 :=.i32 a[temp11.i32].i32;
invokestatic(ioPlus, "printResult", temp10.i32).V;
temp14.i32 :=.i32 4.i32 /.i32 2.i32;
temp13.i32 :=.i32 a[temp14.i32].i32;
invokestatic(ioPlus, "printResult", temp13.i32).V;
temp21.i32 :=.i32 2.i32;
temp20.i32 :=.i32 a[temp21.i32].i32;
temp18.i32 :=.i32 a[temp20.i32].i32;
invokestatic(ioPlus, "printResult", temp18.i32).V;
temp28.i32 :=.i32 arraylength(a.array.i32).i32.i32.i32;
temp27.i32 :=.i32 temp28.i32 -.i32 1.i32;
temp25.i32 :=.i32 a[temp27.i32].i32;
invokestatic(ioPlus, "printResult", temp25.i32).V;

ret.V;
    }

}