import ioPlus;
ArithmeticArgsFuncCall {

    .construct ArithmeticArgsFuncCall().V {
        invokespecial(this, "<init>").V;
    }

    .method public func(a.i32, b.i32, c.i32).i32 {
invokestatic(ioPlus, "printResult", a.i32).V;
invokestatic(ioPlus, "printResult", b.i32).V;
invokestatic(ioPlus, "printResult", c.i32).V;
ret.i32 1.i32;
    }
    .method public static main(args.array.String).V {
d.ArithmeticArgsFuncCall :=.ArithmeticArgsFuncCall new(ArithmeticArgsFuncCall).ArithmeticArgsFuncCall;
invokespecial(d.ArithmeticArgsFuncCall,"<init>").V;
a.i32 :=.i32 10.i32;
b.i32 :=.i32 5.i32;
temp8.i32 :=.i32 10.i32 *.i32 2.i32;
temp7.i32 :=.i32 100.i32 /.i32 10.i32;
temp6.i32 :=.i32 temp7.i32 +.i32 10.i32;
temp4.i32 :=.i32 temp6.i32 -.i32 temp8.i32;
temp9.i32 :=.i32 a.i32 +.i32 b.i32;
temp10.i32 :=.i32 a.i32 -.i32 b.i32;
a.i32 :=.i32 invokevirtual(d.ArithmeticArgsFuncCall, "func", temp4.i32, temp9.i32, temp10.i32).i32;

ret.V;
    }

}